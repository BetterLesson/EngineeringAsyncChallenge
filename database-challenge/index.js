import readFile from "./utils/readFile.js";
import { v4 as uuidv4 } from 'uuid';

/**
  * read file
  * create tables
  * for each line. insert into tables
  *
  * */
const insertOrderItem = (orderId, itemId, itemType) => {
  const sqlString = `
    INSERT INTO order_items(id, order_id, item_type)
    VALUES(${itemId}, '${orderId}', '${itemType}');
  `
  console.log(sqlString);
};

const insertCustomer = (order) => {
  /** 
   * We're assuming that the ID gets autogenerated by the DB, but
   * for the sake of this exercise, we'll generate one in the application
   * for visibility in the console.
   * */

  const id = uuidv4();
  const { customerName, cellPhone, email, address } = order;

  const sqlString = `
    INSERT INTO customers(id, customer_name, cell_phone, email, address)
    VALUES ('${id}', '${customerName}', '${cellPhone}', '${email}', '${address}');
  `
  console.log(sqlString);

  return id;
};


const insertOrder = (order) => {
  const { UUID, orderTotal, orderDate, discountCode, bookSetID, coachingServiceID } = order;

  const customerId = insertCustomer(order);
  const sqlString = `
    INSERT INTO orders (id, customer_id, order_total, order_date, discount_code)
    VALUES ('${UUID}', '${customerId}', '${orderTotal}', '${orderDate}', '${discountCode}');
    `;

  console.log(sqlString);

  if (coachingServiceID) {
    for (const coachingService of coachingServiceID) {
      insertOrderItem(UUID, coachingService, "coaching_service");
    }
  }
  if (bookSetID) {
    for (const bookSet of bookSetID) {
      insertOrderItem(UUID, bookSet, "book_set");
    }
  }
};

const parseJsonToSQL = async () => {
  const data = await readFile("./data.json");

  console.log(`
    CREATE TYPE item_type_enum AS ENUM ('coaching_service', 'book_set');

    CREATE TABLE customers (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      customer_name TEXT,
      cell_phone TEXT,
      email TEXT,
      address TEXT
    );

    CREATE TABLE orders (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      customer_id UUID REFERENCES customers(id) NOT NULL,
      order_total TEXT NOT NULL,
      order_date TIMESTAMP WITH TIME ZONE NOT NULL,
      discount_code TEXT
    );

    CREATE TABLE order_items (
      id SERIAL PRIMARY KEY,
      order_id UUID REFERENCES orders(id) NOT NULL,
      item_type item_type_enum NOT NULL
    );
  `);

  for (const entry of data) {
    insertOrder(entry);
  }
};


await parseJsonToSQL();

